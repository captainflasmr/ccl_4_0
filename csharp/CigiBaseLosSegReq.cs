//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class CigiBaseLosSegReq : CigiBasePacket {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal CigiBaseLosSegReq(global::System.IntPtr cPtr, bool cMemoryOwn) : base(example_modulePINVOKE.CigiBaseLosSegReq_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CigiBaseLosSegReq obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(CigiBaseLosSegReq obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          example_modulePINVOKE.delete_CigiBaseLosSegReq(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public override int Pack(CigiBasePacket Base, SWIGTYPE_p_unsigned___int8 Buff, SWIGTYPE_p_void Spec) {
    int ret = example_modulePINVOKE.CigiBaseLosSegReq_Pack(swigCPtr, CigiBasePacket.getCPtr(Base), SWIGTYPE_p_unsigned___int8.getCPtr(Buff), SWIGTYPE_p_void.getCPtr(Spec));
    return ret;
  }

  public override int Unpack(SWIGTYPE_p_unsigned___int8 Buff, bool Swap, SWIGTYPE_p_void Spec) {
    int ret = example_modulePINVOKE.CigiBaseLosSegReq_Unpack(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(Buff), Swap, SWIGTYPE_p_void.getCPtr(Spec));
    return ret;
  }

  public override int GetCnvt(CigiVersionID CnvtVersion, SWIGTYPE_p_CigiCnvtInfoType__Type CnvtInfo) {
    int ret = example_modulePINVOKE.CigiBaseLosSegReq_GetCnvt(swigCPtr, CigiVersionID.getCPtr(CnvtVersion), SWIGTYPE_p_CigiCnvtInfoType__Type.getCPtr(CnvtInfo));
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int SetLosID(SWIGTYPE_p_unsigned___int16 LosIDIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseLosSegReq_SetLosID__SWIG_0(swigCPtr, SWIGTYPE_p_unsigned___int16.getCPtr(LosIDIn), bndchk);
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int SetLosID(SWIGTYPE_p_unsigned___int16 LosIDIn) {
    int ret = example_modulePINVOKE.CigiBaseLosSegReq_SetLosID__SWIG_1(swigCPtr, SWIGTYPE_p_unsigned___int16.getCPtr(LosIDIn));
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_unsigned___int16 GetLosID() {
    SWIGTYPE_p_unsigned___int16 ret = new SWIGTYPE_p_unsigned___int16(example_modulePINVOKE.CigiBaseLosSegReq_GetLosID(swigCPtr), true);
    return ret;
  }

  public int SetSrcLat(double SrcLatIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseLosSegReq_SetSrcLat__SWIG_0(swigCPtr, SrcLatIn, bndchk);
    return ret;
  }

  public int SetSrcLat(double SrcLatIn) {
    int ret = example_modulePINVOKE.CigiBaseLosSegReq_SetSrcLat__SWIG_1(swigCPtr, SrcLatIn);
    return ret;
  }

  public double GetSrcLat() {
    double ret = example_modulePINVOKE.CigiBaseLosSegReq_GetSrcLat(swigCPtr);
    return ret;
  }

  public int SetSrcLon(double SrcLonIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseLosSegReq_SetSrcLon__SWIG_0(swigCPtr, SrcLonIn, bndchk);
    return ret;
  }

  public int SetSrcLon(double SrcLonIn) {
    int ret = example_modulePINVOKE.CigiBaseLosSegReq_SetSrcLon__SWIG_1(swigCPtr, SrcLonIn);
    return ret;
  }

  public double GetSrcLon() {
    double ret = example_modulePINVOKE.CigiBaseLosSegReq_GetSrcLon(swigCPtr);
    return ret;
  }

  public int SetSrcAlt(double SrcAltIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseLosSegReq_SetSrcAlt__SWIG_0(swigCPtr, SrcAltIn, bndchk);
    return ret;
  }

  public int SetSrcAlt(double SrcAltIn) {
    int ret = example_modulePINVOKE.CigiBaseLosSegReq_SetSrcAlt__SWIG_1(swigCPtr, SrcAltIn);
    return ret;
  }

  public double GetSrcAlt() {
    double ret = example_modulePINVOKE.CigiBaseLosSegReq_GetSrcAlt(swigCPtr);
    return ret;
  }

  public int SetDstLat(double DstLatIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseLosSegReq_SetDstLat__SWIG_0(swigCPtr, DstLatIn, bndchk);
    return ret;
  }

  public int SetDstLat(double DstLatIn) {
    int ret = example_modulePINVOKE.CigiBaseLosSegReq_SetDstLat__SWIG_1(swigCPtr, DstLatIn);
    return ret;
  }

  public double GetDstLat() {
    double ret = example_modulePINVOKE.CigiBaseLosSegReq_GetDstLat(swigCPtr);
    return ret;
  }

  public int SetDstLon(double DstLonIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseLosSegReq_SetDstLon__SWIG_0(swigCPtr, DstLonIn, bndchk);
    return ret;
  }

  public int SetDstLon(double DstLonIn) {
    int ret = example_modulePINVOKE.CigiBaseLosSegReq_SetDstLon__SWIG_1(swigCPtr, DstLonIn);
    return ret;
  }

  public double GetDstLon() {
    double ret = example_modulePINVOKE.CigiBaseLosSegReq_GetDstLon(swigCPtr);
    return ret;
  }

  public int SetDstAlt(double DstAltIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseLosSegReq_SetDstAlt__SWIG_0(swigCPtr, DstAltIn, bndchk);
    return ret;
  }

  public int SetDstAlt(double DstAltIn) {
    int ret = example_modulePINVOKE.CigiBaseLosSegReq_SetDstAlt__SWIG_1(swigCPtr, DstAltIn);
    return ret;
  }

  public double GetDstAlt() {
    double ret = example_modulePINVOKE.CigiBaseLosSegReq_GetDstAlt(swigCPtr);
    return ret;
  }

  public bool IsValidV1or2() {
    bool ret = example_modulePINVOKE.CigiBaseLosSegReq_IsValidV1or2(swigCPtr);
    return ret;
  }

  public enum ReqTypeGrp {
    Basic = 0,
    Extended = 1
  }

  public enum CoordSysGrp {
    Geodetic = 0,
    Entity = 1
  }

}
