//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class CigiCelestialCtrlV3 : CigiBaseEnvCtrl {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal CigiCelestialCtrlV3(global::System.IntPtr cPtr, bool cMemoryOwn) : base(example_modulePINVOKE.CigiCelestialCtrlV3_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CigiCelestialCtrlV3 obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(CigiCelestialCtrlV3 obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          example_modulePINVOKE.delete_CigiCelestialCtrlV3(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public CigiCelestialCtrlV3() : this(example_modulePINVOKE.new_CigiCelestialCtrlV3(), true) {
  }

  public override int Pack(CigiBasePacket Base, SWIGTYPE_p_unsigned___int8 Buff, SWIGTYPE_p_void Spec) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_Pack(swigCPtr, CigiBasePacket.getCPtr(Base), SWIGTYPE_p_unsigned___int8.getCPtr(Buff), SWIGTYPE_p_void.getCPtr(Spec));
    return ret;
  }

  public override int Unpack(SWIGTYPE_p_unsigned___int8 Buff, bool Swap, SWIGTYPE_p_void Spec) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_Unpack(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(Buff), Swap, SWIGTYPE_p_void.getCPtr(Spec));
    return ret;
  }

  public override int GetCnvt(CigiVersionID CnvtVersion, SWIGTYPE_p_CigiCnvtInfoType__Type CnvtInfo) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_GetCnvt(swigCPtr, CigiVersionID.getCPtr(CnvtVersion), SWIGTYPE_p_CigiCnvtInfoType__Type.getCPtr(CnvtInfo));
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override void FillHold(CigiBaseEnvCtrl Hold) {
    example_modulePINVOKE.CigiCelestialCtrlV3_FillHold(swigCPtr, CigiBaseEnvCtrl.getCPtr(Hold));
  }

  public int SetHour(SWIGTYPE_p_unsigned___int8 HourIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_SetHour__SWIG_0(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(HourIn), bndchk);
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int SetHour(SWIGTYPE_p_unsigned___int8 HourIn) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_SetHour__SWIG_1(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(HourIn));
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_unsigned___int8 GetHour() {
    SWIGTYPE_p_unsigned___int8 ret = new SWIGTYPE_p_unsigned___int8(example_modulePINVOKE.CigiCelestialCtrlV3_GetHour(swigCPtr), true);
    return ret;
  }

  public int SetMinute(SWIGTYPE_p_unsigned___int8 MinuteIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_SetMinute__SWIG_0(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(MinuteIn), bndchk);
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int SetMinute(SWIGTYPE_p_unsigned___int8 MinuteIn) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_SetMinute__SWIG_1(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(MinuteIn));
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_unsigned___int8 GetMinute() {
    SWIGTYPE_p_unsigned___int8 ret = new SWIGTYPE_p_unsigned___int8(example_modulePINVOKE.CigiCelestialCtrlV3_GetMinute(swigCPtr), true);
    return ret;
  }

  public int SetMonth(SWIGTYPE_p_unsigned___int8 MonthIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_SetMonth__SWIG_0(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(MonthIn), bndchk);
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int SetMonth(SWIGTYPE_p_unsigned___int8 MonthIn) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_SetMonth__SWIG_1(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(MonthIn));
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_unsigned___int8 GetMonth() {
    SWIGTYPE_p_unsigned___int8 ret = new SWIGTYPE_p_unsigned___int8(example_modulePINVOKE.CigiCelestialCtrlV3_GetMonth(swigCPtr), true);
    return ret;
  }

  public int SetDay(SWIGTYPE_p_unsigned___int8 DayIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_SetDay__SWIG_0(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(DayIn), bndchk);
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int SetDay(SWIGTYPE_p_unsigned___int8 DayIn) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_SetDay__SWIG_1(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(DayIn));
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_unsigned___int8 GetDay() {
    SWIGTYPE_p_unsigned___int8 ret = new SWIGTYPE_p_unsigned___int8(example_modulePINVOKE.CigiCelestialCtrlV3_GetDay(swigCPtr), true);
    return ret;
  }

  public int SetYear(SWIGTYPE_p_unsigned___int16 YearIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_SetYear__SWIG_0(swigCPtr, SWIGTYPE_p_unsigned___int16.getCPtr(YearIn), bndchk);
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int SetYear(SWIGTYPE_p_unsigned___int16 YearIn) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_SetYear__SWIG_1(swigCPtr, SWIGTYPE_p_unsigned___int16.getCPtr(YearIn));
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_unsigned___int16 GetYear() {
    SWIGTYPE_p_unsigned___int16 ret = new SWIGTYPE_p_unsigned___int16(example_modulePINVOKE.CigiCelestialCtrlV3_GetYear(swigCPtr), true);
    return ret;
  }

  public int SetStarInt(float StarIntIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_SetStarInt__SWIG_0(swigCPtr, StarIntIn, bndchk);
    return ret;
  }

  public int SetStarInt(float StarIntIn) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_SetStarInt__SWIG_1(swigCPtr, StarIntIn);
    return ret;
  }

  public float GetStarInt() {
    float ret = example_modulePINVOKE.CigiCelestialCtrlV3_GetStarInt(swigCPtr);
    return ret;
  }

  public int SetEphemerisEn(bool EphemerisEnIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_SetEphemerisEn__SWIG_0(swigCPtr, EphemerisEnIn, bndchk);
    return ret;
  }

  public int SetEphemerisEn(bool EphemerisEnIn) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_SetEphemerisEn__SWIG_1(swigCPtr, EphemerisEnIn);
    return ret;
  }

  public bool GetEphemerisEn() {
    bool ret = example_modulePINVOKE.CigiCelestialCtrlV3_GetEphemerisEn(swigCPtr);
    return ret;
  }

  public int SetSunEn(bool SunEnIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_SetSunEn__SWIG_0(swigCPtr, SunEnIn, bndchk);
    return ret;
  }

  public int SetSunEn(bool SunEnIn) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_SetSunEn__SWIG_1(swigCPtr, SunEnIn);
    return ret;
  }

  public bool GetSunEn() {
    bool ret = example_modulePINVOKE.CigiCelestialCtrlV3_GetSunEn(swigCPtr);
    return ret;
  }

  public int SetMoonEn(bool MoonEnIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_SetMoonEn__SWIG_0(swigCPtr, MoonEnIn, bndchk);
    return ret;
  }

  public int SetMoonEn(bool MoonEnIn) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_SetMoonEn__SWIG_1(swigCPtr, MoonEnIn);
    return ret;
  }

  public bool GetMoonEn() {
    bool ret = example_modulePINVOKE.CigiCelestialCtrlV3_GetMoonEn(swigCPtr);
    return ret;
  }

  public int SetStarEn(bool StarEnIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_SetStarEn__SWIG_0(swigCPtr, StarEnIn, bndchk);
    return ret;
  }

  public int SetStarEn(bool StarEnIn) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_SetStarEn__SWIG_1(swigCPtr, StarEnIn);
    return ret;
  }

  public bool GetStarEn() {
    bool ret = example_modulePINVOKE.CigiCelestialCtrlV3_GetStarEn(swigCPtr);
    return ret;
  }

  public int SetDateVld(bool DateVldIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_SetDateVld__SWIG_0(swigCPtr, DateVldIn, bndchk);
    return ret;
  }

  public int SetDateVld(bool DateVldIn) {
    int ret = example_modulePINVOKE.CigiCelestialCtrlV3_SetDateVld__SWIG_1(swigCPtr, DateVldIn);
    return ret;
  }

  public bool GetDateVld() {
    bool ret = example_modulePINVOKE.CigiCelestialCtrlV3_GetDateVld(swigCPtr);
    return ret;
  }

}
