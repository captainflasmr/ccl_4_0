//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class CigiBaseSignalProcessing : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CigiBaseSignalProcessing(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CigiBaseSignalProcessing obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(CigiBaseSignalProcessing obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~CigiBaseSignalProcessing() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          ccl_dllDPINVOKE.delete_CigiBaseSignalProcessing(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public CigiBaseSignalProcessing() : this(ccl_dllDPINVOKE.new_CigiBaseSignalProcessing(), true) {
  }

  public virtual void OnIGCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnIGCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnArtPartCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnArtPartCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnAtmosCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnAtmosCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnCelestialCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnCelestialCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnCollDetSegDef(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnCollDetSegDef(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnCollDetVolDef(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnCollDetVolDef(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnCompCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnCompCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnConfClampEntityCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnConfClampEntityCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnEarthModelDef(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnEarthModelDef(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnEntityCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnEntityCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnEnvCondReq(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnEnvCondReq(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnEnvCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnEnvCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnEnvRgnCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnEnvRgnCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnHatReq(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnHatReq(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnHatHotReq(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnHatHotReq(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnHatHotXReq(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnHatHotXReq(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnHotReq(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnHotReq(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnLosSegReq(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnLosSegReq(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnLosVectReq(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnLosVectReq(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnMaritimeSurfaceCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnMaritimeSurfaceCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnMotionTrackCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnMotionTrackCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnPostionReq(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnPostionReq(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnRateCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnRateCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnSensorCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnSensorCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnShortArtPartCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnShortArtPartCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnShortCompCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnShortCompCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnShortSymbolCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnShortSymbolCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnSpecEffDef(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnSpecEffDef(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnSymbolCircleDef(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnSymbolCircleDef(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnSymbolClone(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnSymbolClone(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnSymbolCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnSymbolCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnSymbolLineDef(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnSymbolLineDef(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnSymbolTextDef(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnSymbolTextDef(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnSymbolSurfaceDef(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnSymbolSurfaceDef(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnTerrestrialSurfaceCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnTerrestrialSurfaceCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnTrajectory(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnTrajectory(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnViewCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnViewCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnViewDef(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnViewDef(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnWaveCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnWaveCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnWeatherCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnWeatherCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnVelocityCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnVelocityCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnAccelerationCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnAccelerationCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnSymbolPolygonDef(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnSymbolPolygonDef(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnSymbolTexturedCircleDef(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnSymbolTexturedCircleDef(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnSymbolTexturedPolygonDef(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnSymbolTexturedPolygonDef(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnEntityPositionCtrl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnEntityPositionCtrl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnAnimationControl(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnAnimationControl(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnSOF(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnSOF(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnAerosolResp(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnAerosolResp(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnAnimationStop(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnAnimationStop(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnCollDetSegResp(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnCollDetSegResp(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnCollDetVolResp(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnCollDetVolResp(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnEventNotification(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnEventNotification(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnHatResp(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnHatResp(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnHatHotResp(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnHatHotResp(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnHatHotXResp(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnHatHotXResp(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnHotResp(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnHotResp(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnIGMsg(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnIGMsg(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnLosResp(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnLosResp(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnLosXResp(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnLosXResp(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnMaritimeSurfaceResp(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnMaritimeSurfaceResp(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnPositionResp(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnPositionResp(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnSensorResp(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnSensorResp(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnSensorXResp(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnSensorXResp(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnTerrestrialSurfaceResp(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnTerrestrialSurfaceResp(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnWeatherCondResp(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnWeatherCondResp(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

  public virtual void OnUnrecognized(CigiBasePacket Packet) {
    ccl_dllDPINVOKE.CigiBaseSignalProcessing_OnUnrecognized(swigCPtr, CigiBasePacket.getCPtr(Packet));
  }

}
