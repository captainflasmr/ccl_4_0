//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class CigiHatHotReqV4 : CigiBaseHatHotReq {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal CigiHatHotReqV4(global::System.IntPtr cPtr, bool cMemoryOwn) : base(example_modulePINVOKE.CigiHatHotReqV4_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CigiHatHotReqV4 obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(CigiHatHotReqV4 obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          example_modulePINVOKE.delete_CigiHatHotReqV4(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public CigiHatHotReqV4() : this(example_modulePINVOKE.new_CigiHatHotReqV4(), true) {
  }

  public override int Pack(CigiBasePacket Base, SWIGTYPE_p_unsigned___int8 Buff, SWIGTYPE_p_void Spec) {
    int ret = example_modulePINVOKE.CigiHatHotReqV4_Pack(swigCPtr, CigiBasePacket.getCPtr(Base), SWIGTYPE_p_unsigned___int8.getCPtr(Buff), SWIGTYPE_p_void.getCPtr(Spec));
    return ret;
  }

  public override int Unpack(SWIGTYPE_p_unsigned___int8 Buff, bool Swap, SWIGTYPE_p_void Spec) {
    int ret = example_modulePINVOKE.CigiHatHotReqV4_Unpack(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(Buff), Swap, SWIGTYPE_p_void.getCPtr(Spec));
    return ret;
  }

  public override int GetCnvt(CigiVersionID CnvtVersion, SWIGTYPE_p_CigiCnvtInfoType__Type CnvtInfo) {
    int ret = example_modulePINVOKE.CigiHatHotReqV4_GetCnvt(swigCPtr, CigiVersionID.getCPtr(CnvtVersion), SWIGTYPE_p_CigiCnvtInfoType__Type.getCPtr(CnvtInfo));
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int SetReqType(CigiBaseHatHotReq.ReqTypeGrp ReqTypeIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiHatHotReqV4_SetReqType__SWIG_0(swigCPtr, (int)ReqTypeIn, bndchk);
    return ret;
  }

  public int SetReqType(CigiBaseHatHotReq.ReqTypeGrp ReqTypeIn) {
    int ret = example_modulePINVOKE.CigiHatHotReqV4_SetReqType__SWIG_1(swigCPtr, (int)ReqTypeIn);
    return ret;
  }

  public CigiBaseHatHotReq.ReqTypeGrp GetReqType() {
    CigiBaseHatHotReq.ReqTypeGrp ret = (CigiBaseHatHotReq.ReqTypeGrp)example_modulePINVOKE.CigiHatHotReqV4_GetReqType(swigCPtr);
    return ret;
  }

  public int SetSrcCoordSys(CigiBaseHatHotReq.CoordSysGrp SrcCoordSysIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiHatHotReqV4_SetSrcCoordSys__SWIG_0(swigCPtr, (int)SrcCoordSysIn, bndchk);
    return ret;
  }

  public int SetSrcCoordSys(CigiBaseHatHotReq.CoordSysGrp SrcCoordSysIn) {
    int ret = example_modulePINVOKE.CigiHatHotReqV4_SetSrcCoordSys__SWIG_1(swigCPtr, (int)SrcCoordSysIn);
    return ret;
  }

  public CigiBaseHatHotReq.CoordSysGrp GetSrcCoordSys() {
    CigiBaseHatHotReq.CoordSysGrp ret = (CigiBaseHatHotReq.CoordSysGrp)example_modulePINVOKE.CigiHatHotReqV4_GetSrcCoordSys(swigCPtr);
    return ret;
  }

  public int SetUpdatePeriod(SWIGTYPE_p_unsigned___int8 UpdatePeriodIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiHatHotReqV4_SetUpdatePeriod__SWIG_0(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(UpdatePeriodIn), bndchk);
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int SetUpdatePeriod(SWIGTYPE_p_unsigned___int8 UpdatePeriodIn) {
    int ret = example_modulePINVOKE.CigiHatHotReqV4_SetUpdatePeriod__SWIG_1(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(UpdatePeriodIn));
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_unsigned___int8 GetUpdatePeriod() {
    SWIGTYPE_p_unsigned___int8 ret = new SWIGTYPE_p_unsigned___int8(example_modulePINVOKE.CigiHatHotReqV4_GetUpdatePeriod(swigCPtr), true);
    return ret;
  }

  public int SetEntityID(SWIGTYPE_p_unsigned___int16 EntityIDIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiHatHotReqV4_SetEntityID__SWIG_0(swigCPtr, SWIGTYPE_p_unsigned___int16.getCPtr(EntityIDIn), bndchk);
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int SetEntityID(SWIGTYPE_p_unsigned___int16 EntityIDIn) {
    int ret = example_modulePINVOKE.CigiHatHotReqV4_SetEntityID__SWIG_1(swigCPtr, SWIGTYPE_p_unsigned___int16.getCPtr(EntityIDIn));
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_unsigned___int16 GetEntityID() {
    SWIGTYPE_p_unsigned___int16 ret = new SWIGTYPE_p_unsigned___int16(example_modulePINVOKE.CigiHatHotReqV4_GetEntityID(swigCPtr), true);
    return ret;
  }

  public int SetXoff(double XoffIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiHatHotReqV4_SetXoff__SWIG_0(swigCPtr, XoffIn, bndchk);
    return ret;
  }

  public int SetXoff(double XoffIn) {
    int ret = example_modulePINVOKE.CigiHatHotReqV4_SetXoff__SWIG_1(swigCPtr, XoffIn);
    return ret;
  }

  public double GetXoff() {
    double ret = example_modulePINVOKE.CigiHatHotReqV4_GetXoff(swigCPtr);
    return ret;
  }

  public int SetYoff(double YoffIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiHatHotReqV4_SetYoff__SWIG_0(swigCPtr, YoffIn, bndchk);
    return ret;
  }

  public int SetYoff(double YoffIn) {
    int ret = example_modulePINVOKE.CigiHatHotReqV4_SetYoff__SWIG_1(swigCPtr, YoffIn);
    return ret;
  }

  public double GetYoff() {
    double ret = example_modulePINVOKE.CigiHatHotReqV4_GetYoff(swigCPtr);
    return ret;
  }

  public int SetAlt(double AltIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiHatHotReqV4_SetAlt__SWIG_0(swigCPtr, AltIn, bndchk);
    return ret;
  }

  public int SetAlt(double AltIn) {
    int ret = example_modulePINVOKE.CigiHatHotReqV4_SetAlt__SWIG_1(swigCPtr, AltIn);
    return ret;
  }

  public double GetAlt() {
    double ret = example_modulePINVOKE.CigiHatHotReqV4_GetAlt(swigCPtr);
    return ret;
  }

  public int SetZoff(double ZoffIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiHatHotReqV4_SetZoff__SWIG_0(swigCPtr, ZoffIn, bndchk);
    return ret;
  }

  public int SetZoff(double ZoffIn) {
    int ret = example_modulePINVOKE.CigiHatHotReqV4_SetZoff__SWIG_1(swigCPtr, ZoffIn);
    return ret;
  }

  public double GetZoff() {
    double ret = example_modulePINVOKE.CigiHatHotReqV4_GetZoff(swigCPtr);
    return ret;
  }

}
