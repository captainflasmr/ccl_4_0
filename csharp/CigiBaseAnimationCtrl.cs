//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class CigiBaseAnimationCtrl : CigiBasePacket {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal CigiBaseAnimationCtrl(global::System.IntPtr cPtr, bool cMemoryOwn) : base(example_modulePINVOKE.CigiBaseAnimationCtrl_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CigiBaseAnimationCtrl obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(CigiBaseAnimationCtrl obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          example_modulePINVOKE.delete_CigiBaseAnimationCtrl(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public override int Pack(CigiBasePacket Base, SWIGTYPE_p_unsigned___int8 Buff, SWIGTYPE_p_void Spec) {
    int ret = example_modulePINVOKE.CigiBaseAnimationCtrl_Pack(swigCPtr, CigiBasePacket.getCPtr(Base), SWIGTYPE_p_unsigned___int8.getCPtr(Buff), SWIGTYPE_p_void.getCPtr(Spec));
    return ret;
  }

  public override int Unpack(SWIGTYPE_p_unsigned___int8 Buff, bool Swap, SWIGTYPE_p_void Spec) {
    int ret = example_modulePINVOKE.CigiBaseAnimationCtrl_Unpack(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(Buff), Swap, SWIGTYPE_p_void.getCPtr(Spec));
    return ret;
  }

  public override int GetCnvt(CigiVersionID CnvtVersion, SWIGTYPE_p_CigiCnvtInfoType__Type CnvtInfo) {
    int ret = example_modulePINVOKE.CigiBaseAnimationCtrl_GetCnvt(swigCPtr, CigiVersionID.getCPtr(CnvtVersion), SWIGTYPE_p_CigiCnvtInfoType__Type.getCPtr(CnvtInfo));
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int SetEntityID(SWIGTYPE_p_unsigned___int16 EntityIDIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseAnimationCtrl_SetEntityID__SWIG_0(swigCPtr, SWIGTYPE_p_unsigned___int16.getCPtr(EntityIDIn), bndchk);
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int SetEntityID(SWIGTYPE_p_unsigned___int16 EntityIDIn) {
    int ret = example_modulePINVOKE.CigiBaseAnimationCtrl_SetEntityID__SWIG_1(swigCPtr, SWIGTYPE_p_unsigned___int16.getCPtr(EntityIDIn));
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_unsigned___int16 GetEntityID() {
    SWIGTYPE_p_unsigned___int16 ret = new SWIGTYPE_p_unsigned___int16(example_modulePINVOKE.CigiBaseAnimationCtrl_GetEntityID(swigCPtr), true);
    return ret;
  }

  public int SetAnimationID(SWIGTYPE_p_unsigned___int16 AnimationIDIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseAnimationCtrl_SetAnimationID__SWIG_0(swigCPtr, SWIGTYPE_p_unsigned___int16.getCPtr(AnimationIDIn), bndchk);
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int SetAnimationID(SWIGTYPE_p_unsigned___int16 AnimationIDIn) {
    int ret = example_modulePINVOKE.CigiBaseAnimationCtrl_SetAnimationID__SWIG_1(swigCPtr, SWIGTYPE_p_unsigned___int16.getCPtr(AnimationIDIn));
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_unsigned___int16 GetAnimationID() {
    SWIGTYPE_p_unsigned___int16 ret = new SWIGTYPE_p_unsigned___int16(example_modulePINVOKE.CigiBaseAnimationCtrl_GetAnimationID(swigCPtr), true);
    return ret;
  }

  public int SetAlpha(SWIGTYPE_p_unsigned___int8 AlphaIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseAnimationCtrl_SetAlpha__SWIG_0(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(AlphaIn), bndchk);
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int SetAlpha(SWIGTYPE_p_unsigned___int8 AlphaIn) {
    int ret = example_modulePINVOKE.CigiBaseAnimationCtrl_SetAlpha__SWIG_1(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(AlphaIn));
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_unsigned___int8 GetAlpha() {
    SWIGTYPE_p_unsigned___int8 ret = new SWIGTYPE_p_unsigned___int8(example_modulePINVOKE.CigiBaseAnimationCtrl_GetAlpha(swigCPtr), true);
    return ret;
  }

  public int SetAnimationSpeed(float AnimationSpeedIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseAnimationCtrl_SetAnimationSpeed__SWIG_0(swigCPtr, AnimationSpeedIn, bndchk);
    return ret;
  }

  public int SetAnimationSpeed(float AnimationSpeedIn) {
    int ret = example_modulePINVOKE.CigiBaseAnimationCtrl_SetAnimationSpeed__SWIG_1(swigCPtr, AnimationSpeedIn);
    return ret;
  }

  public float GetAnimationSpeed() {
    float ret = example_modulePINVOKE.CigiBaseAnimationCtrl_GetAnimationSpeed(swigCPtr);
    return ret;
  }

  public int SetInheritAlpha(CigiBaseAnimationCtrl.InheritAlphaGrp InheritAlphaIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseAnimationCtrl_SetInheritAlpha__SWIG_0(swigCPtr, (int)InheritAlphaIn, bndchk);
    return ret;
  }

  public int SetInheritAlpha(CigiBaseAnimationCtrl.InheritAlphaGrp InheritAlphaIn) {
    int ret = example_modulePINVOKE.CigiBaseAnimationCtrl_SetInheritAlpha__SWIG_1(swigCPtr, (int)InheritAlphaIn);
    return ret;
  }

  public CigiBaseAnimationCtrl.InheritAlphaGrp GetInheritAlpha() {
    CigiBaseAnimationCtrl.InheritAlphaGrp ret = (CigiBaseAnimationCtrl.InheritAlphaGrp)example_modulePINVOKE.CigiBaseAnimationCtrl_GetInheritAlpha(swigCPtr);
    return ret;
  }

  public int SetAnimationState(CigiBaseAnimationCtrl.AnimationStateGrp AnimationStateIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseAnimationCtrl_SetAnimationState__SWIG_0(swigCPtr, (int)AnimationStateIn, bndchk);
    return ret;
  }

  public int SetAnimationState(CigiBaseAnimationCtrl.AnimationStateGrp AnimationStateIn) {
    int ret = example_modulePINVOKE.CigiBaseAnimationCtrl_SetAnimationState__SWIG_1(swigCPtr, (int)AnimationStateIn);
    return ret;
  }

  public CigiBaseAnimationCtrl.AnimationStateGrp GetAnimationState() {
    CigiBaseAnimationCtrl.AnimationStateGrp ret = (CigiBaseAnimationCtrl.AnimationStateGrp)example_modulePINVOKE.CigiBaseAnimationCtrl_GetAnimationState(swigCPtr);
    return ret;
  }

  public int SetAnimationFrameResetMode(CigiBaseAnimationCtrl.AnimationFramePositionResetGrp AnimationFrameResetModeIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseAnimationCtrl_SetAnimationFrameResetMode__SWIG_0(swigCPtr, (int)AnimationFrameResetModeIn, bndchk);
    return ret;
  }

  public int SetAnimationFrameResetMode(CigiBaseAnimationCtrl.AnimationFramePositionResetGrp AnimationFrameResetModeIn) {
    int ret = example_modulePINVOKE.CigiBaseAnimationCtrl_SetAnimationFrameResetMode__SWIG_1(swigCPtr, (int)AnimationFrameResetModeIn);
    return ret;
  }

  public CigiBaseAnimationCtrl.AnimationFramePositionResetGrp GetAnimationFrameResetMode() {
    CigiBaseAnimationCtrl.AnimationFramePositionResetGrp ret = (CigiBaseAnimationCtrl.AnimationFramePositionResetGrp)example_modulePINVOKE.CigiBaseAnimationCtrl_GetAnimationFrameResetMode(swigCPtr);
    return ret;
  }

  public int SetAnimationLoopMode(CigiBaseAnimationCtrl.AnimationLoopModeGrp AnimationLoopModeIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseAnimationCtrl_SetAnimationLoopMode__SWIG_0(swigCPtr, (int)AnimationLoopModeIn, bndchk);
    return ret;
  }

  public int SetAnimationLoopMode(CigiBaseAnimationCtrl.AnimationLoopModeGrp AnimationLoopModeIn) {
    int ret = example_modulePINVOKE.CigiBaseAnimationCtrl_SetAnimationLoopMode__SWIG_1(swigCPtr, (int)AnimationLoopModeIn);
    return ret;
  }

  public CigiBaseAnimationCtrl.AnimationLoopModeGrp GetAnimationLoopMode() {
    CigiBaseAnimationCtrl.AnimationLoopModeGrp ret = (CigiBaseAnimationCtrl.AnimationLoopModeGrp)example_modulePINVOKE.CigiBaseAnimationCtrl_GetAnimationLoopMode(swigCPtr);
    return ret;
  }

  public enum AnimationStateGrp {
    Stop = 0,
    Play = 1
  }

  public enum AnimationFramePositionResetGrp {
    Continue = 0,
    Reset = 1
  }

  public enum AnimationLoopModeGrp {
    OneShot = 0,
    Continuous = 1
  }

  public enum InheritAlphaGrp {
    NoInherit = 0,
    Inherit = 1
  }

}
