//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class CigiBaseSpecEffDef : CigiBasePacket {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal CigiBaseSpecEffDef(global::System.IntPtr cPtr, bool cMemoryOwn) : base(example_modulePINVOKE.CigiBaseSpecEffDef_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CigiBaseSpecEffDef obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(CigiBaseSpecEffDef obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          example_modulePINVOKE.delete_CigiBaseSpecEffDef(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public override int Pack(CigiBasePacket Base, SWIGTYPE_p_unsigned___int8 Buff, SWIGTYPE_p_void Spec) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_Pack(swigCPtr, CigiBasePacket.getCPtr(Base), SWIGTYPE_p_unsigned___int8.getCPtr(Buff), SWIGTYPE_p_void.getCPtr(Spec));
    return ret;
  }

  public override int Unpack(SWIGTYPE_p_unsigned___int8 Buff, bool Swap, SWIGTYPE_p_void Spec) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_Unpack(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(Buff), Swap, SWIGTYPE_p_void.getCPtr(Spec));
    return ret;
  }

  public override int GetCnvt(CigiVersionID CnvtVersion, SWIGTYPE_p_CigiCnvtInfoType__Type CnvtInfo) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_GetCnvt(swigCPtr, CigiVersionID.getCPtr(CnvtVersion), SWIGTYPE_p_CigiCnvtInfoType__Type.getCPtr(CnvtInfo));
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int SetEntityID(SWIGTYPE_p_unsigned___int16 EntityIDIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetEntityID__SWIG_0(swigCPtr, SWIGTYPE_p_unsigned___int16.getCPtr(EntityIDIn), bndchk);
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int SetEntityID(SWIGTYPE_p_unsigned___int16 EntityIDIn) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetEntityID__SWIG_1(swigCPtr, SWIGTYPE_p_unsigned___int16.getCPtr(EntityIDIn));
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_unsigned___int16 GetEntityID() {
    SWIGTYPE_p_unsigned___int16 ret = new SWIGTYPE_p_unsigned___int16(example_modulePINVOKE.CigiBaseSpecEffDef_GetEntityID(swigCPtr), true);
    return ret;
  }

  public int SetSeqDir(CigiBaseSpecEffDef.SeqDirGrp SeqDirIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetSeqDir__SWIG_0(swigCPtr, (int)SeqDirIn, bndchk);
    return ret;
  }

  public int SetSeqDir(CigiBaseSpecEffDef.SeqDirGrp SeqDirIn) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetSeqDir__SWIG_1(swigCPtr, (int)SeqDirIn);
    return ret;
  }

  public CigiBaseSpecEffDef.SeqDirGrp GetSeqDir() {
    CigiBaseSpecEffDef.SeqDirGrp ret = (CigiBaseSpecEffDef.SeqDirGrp)example_modulePINVOKE.CigiBaseSpecEffDef_GetSeqDir(swigCPtr);
    return ret;
  }

  public int SetColorEn(bool ColorEnIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetColorEn__SWIG_0(swigCPtr, ColorEnIn, bndchk);
    return ret;
  }

  public int SetColorEn(bool ColorEnIn) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetColorEn__SWIG_1(swigCPtr, ColorEnIn);
    return ret;
  }

  public bool GetColorEn() {
    bool ret = example_modulePINVOKE.CigiBaseSpecEffDef_GetColorEn(swigCPtr);
    return ret;
  }

  public int SetRed(SWIGTYPE_p_unsigned___int8 RedIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetRed__SWIG_0(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(RedIn), bndchk);
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int SetRed(SWIGTYPE_p_unsigned___int8 RedIn) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetRed__SWIG_1(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(RedIn));
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_unsigned___int8 GetRed() {
    SWIGTYPE_p_unsigned___int8 ret = new SWIGTYPE_p_unsigned___int8(example_modulePINVOKE.CigiBaseSpecEffDef_GetRed(swigCPtr), true);
    return ret;
  }

  public int SetGreen(SWIGTYPE_p_unsigned___int8 GreenIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetGreen__SWIG_0(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(GreenIn), bndchk);
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int SetGreen(SWIGTYPE_p_unsigned___int8 GreenIn) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetGreen__SWIG_1(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(GreenIn));
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_unsigned___int8 GetGreen() {
    SWIGTYPE_p_unsigned___int8 ret = new SWIGTYPE_p_unsigned___int8(example_modulePINVOKE.CigiBaseSpecEffDef_GetGreen(swigCPtr), true);
    return ret;
  }

  public int SetBlue(SWIGTYPE_p_unsigned___int8 BlueIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetBlue__SWIG_0(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(BlueIn), bndchk);
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int SetBlue(SWIGTYPE_p_unsigned___int8 BlueIn) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetBlue__SWIG_1(swigCPtr, SWIGTYPE_p_unsigned___int8.getCPtr(BlueIn));
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_unsigned___int8 GetBlue() {
    SWIGTYPE_p_unsigned___int8 ret = new SWIGTYPE_p_unsigned___int8(example_modulePINVOKE.CigiBaseSpecEffDef_GetBlue(swigCPtr), true);
    return ret;
  }

  public int SetXScale(float XScaleIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetXScale__SWIG_0(swigCPtr, XScaleIn, bndchk);
    return ret;
  }

  public int SetXScale(float XScaleIn) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetXScale__SWIG_1(swigCPtr, XScaleIn);
    return ret;
  }

  public float GetXScale() {
    float ret = example_modulePINVOKE.CigiBaseSpecEffDef_GetXScale(swigCPtr);
    return ret;
  }

  public int SetYScale(float YScaleIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetYScale__SWIG_0(swigCPtr, YScaleIn, bndchk);
    return ret;
  }

  public int SetYScale(float YScaleIn) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetYScale__SWIG_1(swigCPtr, YScaleIn);
    return ret;
  }

  public float GetYScale() {
    float ret = example_modulePINVOKE.CigiBaseSpecEffDef_GetYScale(swigCPtr);
    return ret;
  }

  public int SetZScale(float ZScaleIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetZScale__SWIG_0(swigCPtr, ZScaleIn, bndchk);
    return ret;
  }

  public int SetZScale(float ZScaleIn) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetZScale__SWIG_1(swigCPtr, ZScaleIn);
    return ret;
  }

  public float GetZScale() {
    float ret = example_modulePINVOKE.CigiBaseSpecEffDef_GetZScale(swigCPtr);
    return ret;
  }

  public int SetTimeScale(float TimeScaleIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetTimeScale__SWIG_0(swigCPtr, TimeScaleIn, bndchk);
    return ret;
  }

  public int SetTimeScale(float TimeScaleIn) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetTimeScale__SWIG_1(swigCPtr, TimeScaleIn);
    return ret;
  }

  public float GetTimeScale() {
    float ret = example_modulePINVOKE.CigiBaseSpecEffDef_GetTimeScale(swigCPtr);
    return ret;
  }

  public int SetEffectCnt(SWIGTYPE_p_unsigned___int16 EffectCntIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetEffectCnt__SWIG_0(swigCPtr, SWIGTYPE_p_unsigned___int16.getCPtr(EffectCntIn), bndchk);
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int SetEffectCnt(SWIGTYPE_p_unsigned___int16 EffectCntIn) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetEffectCnt__SWIG_1(swigCPtr, SWIGTYPE_p_unsigned___int16.getCPtr(EffectCntIn));
    if (example_modulePINVOKE.SWIGPendingException.Pending) throw example_modulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_unsigned___int16 GetEffectCnt() {
    SWIGTYPE_p_unsigned___int16 ret = new SWIGTYPE_p_unsigned___int16(example_modulePINVOKE.CigiBaseSpecEffDef_GetEffectCnt(swigCPtr), true);
    return ret;
  }

  public int SetSeparation(float SeparationIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetSeparation__SWIG_0(swigCPtr, SeparationIn, bndchk);
    return ret;
  }

  public int SetSeparation(float SeparationIn) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetSeparation__SWIG_1(swigCPtr, SeparationIn);
    return ret;
  }

  public float GetSeparation() {
    float ret = example_modulePINVOKE.CigiBaseSpecEffDef_GetSeparation(swigCPtr);
    return ret;
  }

  public int SetBurstRate(float BurstRateIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetBurstRate__SWIG_0(swigCPtr, BurstRateIn, bndchk);
    return ret;
  }

  public int SetBurstRate(float BurstRateIn) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetBurstRate__SWIG_1(swigCPtr, BurstRateIn);
    return ret;
  }

  public float GetBurstRate() {
    float ret = example_modulePINVOKE.CigiBaseSpecEffDef_GetBurstRate(swigCPtr);
    return ret;
  }

  public int SetDuration(float DurationIn, bool bndchk) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetDuration__SWIG_0(swigCPtr, DurationIn, bndchk);
    return ret;
  }

  public int SetDuration(float DurationIn) {
    int ret = example_modulePINVOKE.CigiBaseSpecEffDef_SetDuration__SWIG_1(swigCPtr, DurationIn);
    return ret;
  }

  public float GetDuration() {
    float ret = example_modulePINVOKE.CigiBaseSpecEffDef_GetDuration(swigCPtr);
    return ret;
  }

  public enum SeqDirGrp {
    Forward = 0,
    Backward = 1
  }

}
